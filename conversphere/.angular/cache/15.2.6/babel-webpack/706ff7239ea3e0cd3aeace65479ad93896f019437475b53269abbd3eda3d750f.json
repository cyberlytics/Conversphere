{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class AuthentificationService {\n  constructor(http) {\n    this.http = http;\n    this.baseUrl = 'http://localhost/auth';\n  }\n  register(email, password) {\n    const url = `${this.baseUrl}/register`;\n    return this.http.post(url, {\n      email,\n      password\n    });\n  }\n  login(email, password) {\n    const url = `${this.baseUrl}/login`;\n    return this.http.post(url, {\n      email,\n      password\n    });\n  }\n}\nAuthentificationService.ɵfac = function AuthentificationService_Factory(t) {\n  return new (t || AuthentificationService)(i0.ɵɵinject(i1.HttpClient));\n};\nAuthentificationService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: AuthentificationService,\n  factory: AuthentificationService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";;AAOA,OAAM,MAAOA,uBAAuB;EAGlCC,YAAoBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;IAFhB,YAAO,GAAG,uBAAuB;EAED;EAExCC,QAAQ,CAACC,KAAa,EAAEC,QAAgB;IACtC,MAAMC,GAAG,GAAG,GAAG,IAAI,CAACC,OAAO,WAAW;IACtC,OAAO,IAAI,CAACL,IAAI,CAACM,IAAI,CAACF,GAAG,EAAE;MAAEF,KAAK;MAAEC;IAAQ,CAAE,CAAC;EACjD;EAEAI,KAAK,CAACL,KAAa,EAAEC,QAAgB;IACnC,MAAMC,GAAG,GAAG,GAAG,IAAI,CAACC,OAAO,QAAQ;IACnC,OAAO,IAAI,CAACL,IAAI,CAACM,IAAI,CAACF,GAAG,EAAE;MAAEF,KAAK;MAAEC;IAAQ,CAAE,CAAC;EACjD;;AAbWL,uBAAuB;mBAAvBA,uBAAuB;AAAA;AAAvBA,uBAAuB;SAAvBA,uBAAuB;EAAAU,SAAvBV,uBAAuB;EAAAW,YAFtB;AAAM","names":["AuthentificationService","constructor","http","register","email","password","url","baseUrl","post","login","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\feill\\Documents\\Programmieren\\wae\\wae-projektarbeit\\src\\app\\services\\authentification.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AuthentificationService {\n  private baseUrl = 'http://localhost/auth';\n\n  constructor(private http: HttpClient) { }\n\n  register(email: string, password: string): Observable<any> {\n    const url = `${this.baseUrl}/register`;\n    return this.http.post(url, { email, password });\n  }\n\n  login(email: string, password: string): Observable<any> {\n    const url = `${this.baseUrl}/login`;\n    return this.http.post(url, { email, password });\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}