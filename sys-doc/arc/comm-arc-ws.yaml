asyncapi: '2.6.0'
id: http://conversphere.com
tags:
  - name: WebApp
info:
  title: Conversphere
  version: '0.0.1'
  description: TBD
  contact:
    name: Conversphere-Team
    url: http://conversphere.com
    email: info@converspere.com
  license:
    name: TBD
servers:
  test:
    url: localhost:8080
    protocol: ws
    description: local test server
    tags:
      - name: "env:development"
        description: This environment is meant for developers to run their own tests
defaultContentType: application/json
channels:
  ws/rooms/{roomId}/messages:
    description: The topic where information about messages may be produced and consumed.
    parameters:
      roomId:
        $ref: '#/components/parameters/roomId'
    publish:
      summary: Information about a new message in the room.
      operationId: receiveNewMessage
      message:
        $ref: '#/components/messages/receivedMessage'
    subscribe:
      summary: Inform about a new message in the room.
      operationId: sendNewMessage
      message:
        $ref: '#/components/messages/sendMessage'
  ws/rooms/{roomId}/users:
    description: The topic where information about a user may be consumed or produced.
    parameters:
      roomId:
        $ref: '#/components/parameters/roomId'
    subscribe:
      summary: Information about a user in the room.
      operationId: SubUserInformation
      message:
        oneOf:
          - $ref: '#/components/messages/leaveRoom'
          - $ref: '#/components/messages/positionUpdate'
    publish:
      summary: Information about a user-interaction in the room.
      operationId: userInformation
      message:
          $ref: '#/components/messages/usersUpdated'
components:
  messages:
    receivedMessage:
      messageId: receivedMessage
      name: receivedMessage
      title: Received message
      summary: Information about a new message in the chatroom
      payload:
        $ref: '#/components/schemas/Message'
    sendMessage:
      messageId: sendMessage
      name: sendMessage
      title: Send Message
      summary: Information about a new message to send to the chatroom
      payload:
        $ref: '#/components/schemas/Message'
    usersUpdated:
      messageId: usersUpdate
      name: usersUpdate
      title: Users update
      summary: Information about all the users in the chatroom.
      payload:
        type: array
        items:
          - $ref: '#/components/schemas/User'
        additionalProperties: false
    leaveRoom:
      messageId: leaveRoom
      name: leaveRoom
      title: Leave room
      summary: Information about leaving the room
      payload:
        $ref: '#/components/schemas/User'
    positionUpdate:
      messageId: positionUpdate
      name: positionUpdate
      title: Position update
      summary: Information about the new position of a user
      payload:
        $ref: '#/components/schemas/User'
  schemas:
    User:
      type: object
      properties:
        id:
          type: string
          format: uuid
          description: Unique id of the user 
        nickname:
          type: string
          example: 'Test-User'
          description: Nickname of the user.
        position:
          type: object
          properties:
            x:
              type: integer
              description: X-Coordinate of the user
            y:
              type: integer
              description: Y-Coordinate of the user
      additionalProperties: false
    Message:
      type: object
      properties:
        text:
          type: string
          example: 'Hi, what''s up?'
          description: Content of the message
        user_id:
          type: string
          format: uuid
          description: Id of the sender
      additionalProperties:
        type: object
        properties:
          id:
            type: string
            fromat: uuid
            description: Unique id of the message
          visibility:
            type: integer
            minimum: 0
            maximum: 100
            description: Visibility of the message in percent
        additionalProperties: false
  parameters:
    roomId:
      description: The ID of the room.
      schema:
        type: string
        format: uuid
